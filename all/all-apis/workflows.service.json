{"name":"Workflows","memberOf":"All APIs","category":"business-service","mixes":[],"labels":[],"docs":{"summary":"Manage Workflows Phases and Cards","description":[]},"properties":[],"tags":[{"name":"Workflow Templates","entity":null},{"name":"Workflows","entity":"_com_wixpress_workflow_api_v1_Workflow"},{"name":"Phases","entity":"_com_wixpress_workflow_api_v1_Phase"},{"name":"Cards","entity":"_com_wixpress_workflow_api_v1_Card"}],"relatedGuides":[{"path":"../guides/workflows/com/wixpress/workflow/api/v1/docs/intro.md","name":"Introduction"}],"operations":[{"name":"Archive Card","methodName":"ArchiveCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" a unique identifier of the card that should be archived\n","required":true}],"ret":{"type":{"name":"ArchiveCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_ArchiveCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Moves a card to the archive\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/v1/cards/{id}/archive","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/cards/7dcd8d3a-6670-4c2b-9084-ed921a9c5f15/archive' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"ArchiveCardRequest","rpcResponseName":"ArchiveCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Archive Card (Additional Binding 1)","methodName":"ArchiveCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" a unique identifier of the card that should be archived\n","required":true}],"ret":{"type":{"name":"ArchiveCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_ArchiveCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Moves a card to the archive\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/api/v1/cards/{id}/archive","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/cards/7dcd8d3a-6670-4c2b-9084-ed921a9c5f15/archive' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"ArchiveCardRequest","rpcResponseName":"ArchiveCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Create Card","methodName":"CreateCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["workflowId","phaseId"],"params":[{"in":"PATH","name":"workflowId","type":"string","doc":" a unique id of the workflow in context\n","required":true},{"in":"PATH","name":"phaseId","type":"string","doc":" a unique id of the phase in context\n","required":true},{"in":"BODY","name":"card","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo","doc":" the card to create\n","required":false},{"in":"BODY","name":"position","type":"integer","doc":" the initial position index in which the card will be created (uppermost position index is 0)\n","required":false}],"ret":{"type":{"name":"CreateCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_CreateCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Creates a new card in a workflow\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/v1/workflows/{workflowId}/phases/{phaseId}/cards","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1/phases/76bef747-53d9-44fe-b2bb-aec5e0e2e5cb/cards' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"card\": {\n      \"name\": \"title\",\n      \"primaryAttachment\": {\n        \"contactId\": \"4c70bd40-8af0-49fb-a49f-cc483a0ff652\"\n      },\n      \"source\": \"cool source\"\n    }\n}'"],"response":["{\"id\": \"07b7fe9b-aa62-451c-910b-424ae8940a0b\"} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"CreateCardRequest","rpcResponseName":"CreateCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Create Card (Additional Binding 1)","methodName":"CreateCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["workflowId","phaseId"],"params":[{"in":"PATH","name":"workflowId","type":"string","doc":" a unique id of the workflow in context\n","required":true},{"in":"PATH","name":"phaseId","type":"string","doc":" a unique id of the phase in context\n","required":true},{"in":"BODY","name":"card","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo","doc":" the card to create\n","required":false},{"in":"BODY","name":"position","type":"integer","doc":" the initial position index in which the card will be created (uppermost position index is 0)\n","required":false}],"ret":{"type":{"name":"CreateCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_CreateCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Creates a new card in a workflow\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/api/v1/workflows/{workflowId}/phases/{phaseId}/cards","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1/phases/76bef747-53d9-44fe-b2bb-aec5e0e2e5cb/cards' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"card\": {\n      \"name\": \"title\",\n      \"primaryAttachment\": {\n        \"contactId\": \"4c70bd40-8af0-49fb-a49f-cc483a0ff652\"\n      },\n      \"source\": \"cool source\"\n    }\n}'"],"response":["{\"id\": \"07b7fe9b-aa62-451c-910b-424ae8940a0b\"} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"CreateCardRequest","rpcResponseName":"CreateCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Create Phase","methodName":"CreatePhase","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["phase.name","workflowId"],"params":[{"in":"PATH","name":"workflowId","type":"string","doc":" ID of the workflow the phase will be created in.\n","required":true},{"in":"BODY","name":"phase","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo","doc":" Phase details.\n","required":false},{"in":"BODY","name":"position","type":"integer","doc":" Phase position, where the first phase is `0`.\n\n Defaults to the last phase before the win phase.\n","required":false}],"ret":{"type":{"name":"CreatePhase","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_CreatePhaseResponse"]},"doc":""},"locations":[],"docs":{"summary":" Creates a new phase inside a workflow\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/v1/workflows/{workflowId}/phases","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1/phases' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"phase\": {\n\t\t\"name\": \"New phase\"\t\n\t},\n\t\"position\": 2\n}'"],"response":["{\"id\": \"3ffb39a6-1709-4aa9-aa9f-eca733004039\"} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"CreatePhaseRequest","rpcResponseName":"CreatePhaseResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Create Phase (Additional Binding 1)","methodName":"CreatePhase","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["phase.name","workflowId"],"params":[{"in":"PATH","name":"workflowId","type":"string","doc":" ID of the workflow the phase will be created in.\n","required":true},{"in":"BODY","name":"phase","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo","doc":" Phase details.\n","required":false},{"in":"BODY","name":"position","type":"integer","doc":" Phase position, where the first phase is `0`.\n\n Defaults to the last phase before the win phase.\n","required":false}],"ret":{"type":{"name":"CreatePhase","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_CreatePhaseResponse"]},"doc":""},"locations":[],"docs":{"summary":" Creates a new phase inside a workflow\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/api/v1/workflows/{workflowId}/phases","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1/phases' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"phase\": {\n\t\t\"name\": \"New phase\"\t\n\t},\n\t\"position\": 2\n}'"],"response":["{\"id\": \"3ffb39a6-1709-4aa9-aa9f-eca733004039\"} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"CreatePhaseRequest","rpcResponseName":"CreatePhaseResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Create Workflow","methodName":"CreateWorkflow","serviceName":"WorkflowsService","tag":"Workflows","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["workflow.name"],"params":[{"in":"BODY","name":"workflow","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo","doc":" Workflow info.\n","required":false}],"ret":{"type":{"name":"CreateWorkflow","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_CreateWorkflowResponse"]},"doc":""},"locations":[],"docs":{"summary":" Creates a new workflow.\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/v1/workflows","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/workflows' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"workflow\": {\n\t\t\"name\": \"New Workflow\"\n\t}\n}'"],"response":["{\"id\": \"4807f096-89af-4b02-81eb-216a39ec8317\"} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"CreateWorkflowRequest","rpcResponseName":"CreateWorkflowResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Create Workflow (Additional Binding 1)","methodName":"CreateWorkflow","serviceName":"WorkflowsService","tag":"Workflows","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["workflow.name"],"params":[{"in":"BODY","name":"workflow","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo","doc":" Workflow info.\n","required":false}],"ret":{"type":{"name":"CreateWorkflow","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_CreateWorkflowResponse"]},"doc":""},"locations":[],"docs":{"summary":" Creates a new workflow.\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/api/v1/workflows","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/workflows' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"workflow\": {\n\t\t\"name\": \"New Workflow\"\n\t}\n}'"],"response":["{\"id\": \"4807f096-89af-4b02-81eb-216a39ec8317\"} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"CreateWorkflowRequest","rpcResponseName":"CreateWorkflowResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Delete Card","methodName":"DeleteCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" a unique identifier of the card that should be deleted\n","required":true}],"ret":{"type":{"name":"DeleteCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_DeleteCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Delete an existing card from a workflow\n \n","description":[],"request":"DELETE","url":"https://www.wixapis.com/workflows/v1/cards/{id}","links":[],"examples":[{"title":"","body":["curl --location --request DELETE 'www.wixapis.com/workflows/api/v1/cards/07b7fe9b-aa62-451c-910b-424ae8940a0b' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"DeleteCardRequest","rpcResponseName":"DeleteCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Delete Card (Additional Binding 1)","methodName":"DeleteCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" a unique identifier of the card that should be deleted\n","required":true}],"ret":{"type":{"name":"DeleteCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_DeleteCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Delete an existing card from a workflow\n \n","description":[],"request":"DELETE","url":"https://www.wixapis.com/workflows/api/v1/cards/{id}","links":[],"examples":[{"title":"","body":["curl --location --request DELETE 'www.wixapis.com/workflows/api/v1/cards/07b7fe9b-aa62-451c-910b-424ae8940a0b' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"DeleteCardRequest","rpcResponseName":"DeleteCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Delete Phase","methodName":"DeletePhase","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" ID of the phase to delete.\n","required":true}],"ret":{"type":{"name":"DeletePhase","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_DeletePhaseResponse"]},"doc":""},"locations":[],"docs":{"summary":" Delete an existing phase from a workflow\n \n","description":[],"request":"DELETE","url":"https://www.wixapis.com/workflows/v1/phases/{id}","links":[],"examples":[{"title":"","body":["curl --location --request DELETE 'www.wixapis.com/workflows/api/v1/phases/3ffb39a6-1709-4aa9-aa9f-eca733004039' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"DeletePhaseRequest","rpcResponseName":"DeletePhaseResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Delete Phase (Additional Binding 1)","methodName":"DeletePhase","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" ID of the phase to delete.\n","required":true}],"ret":{"type":{"name":"DeletePhase","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_DeletePhaseResponse"]},"doc":""},"locations":[],"docs":{"summary":" Delete an existing phase from a workflow\n \n","description":[],"request":"DELETE","url":"https://www.wixapis.com/workflows/api/v1/phases/{id}","links":[],"examples":[{"title":"","body":["curl --location --request DELETE 'www.wixapis.com/workflows/api/v1/phases/3ffb39a6-1709-4aa9-aa9f-eca733004039' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"DeletePhaseRequest","rpcResponseName":"DeletePhaseResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Delete Workflow","methodName":"DeleteWorkflow","serviceName":"WorkflowsService","tag":"Workflows","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" ID of the workflow to delete.\n","required":true}],"ret":{"type":{"name":"DeleteWorkflow","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_DeleteWorkflowResponse"]},"doc":""},"locations":[],"docs":{"summary":" Delete an existing workflow\n \n","description":[],"request":"DELETE","url":"https://www.wixapis.com/workflows/v1/workflows/{id}","links":[],"examples":[{"title":"","body":["curl --location --request DELETE 'www.wixapis.com/workflows/api/v1/workflows/4807f096-89af-4b02-81eb-216a39ec8317' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"DeleteWorkflowRequest","rpcResponseName":"DeleteWorkflowResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Delete Workflow (Additional Binding 1)","methodName":"DeleteWorkflow","serviceName":"WorkflowsService","tag":"Workflows","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" ID of the workflow to delete.\n","required":true}],"ret":{"type":{"name":"DeleteWorkflow","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_DeleteWorkflowResponse"]},"doc":""},"locations":[],"docs":{"summary":" Delete an existing workflow\n \n","description":[],"request":"DELETE","url":"https://www.wixapis.com/workflows/api/v1/workflows/{id}","links":[],"examples":[{"title":"","body":["curl --location --request DELETE 'www.wixapis.com/workflows/api/v1/workflows/4807f096-89af-4b02-81eb-216a39ec8317' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"DeleteWorkflowRequest","rpcResponseName":"DeleteWorkflowResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Get Card","methodName":"GetCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" a unique identifier of the requested card\n","required":true}],"ret":{"type":{"name":"GetCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_GetCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Returns information about particular card\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/v1/cards/{id}","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\"card\": {\"info\": {\n  \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n  \"name\": \"\",\n  \"primaryAttachment\":   {\n    \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n    \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n  },\n  \"source\": \"Contacts\",\n  \"createdAt\": \"2020-06-03T17:57:32Z\",\n  \"updatedAt\": \"2020-06-03T17:57:32Z\",\n  \"phaseId\": \"d6b621bd-2681-417f-b394-8b78586cc082\"\n}}} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"GetCardRequest","rpcResponseName":"GetCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Get Card (Additional Binding 1)","methodName":"GetCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" a unique identifier of the requested card\n","required":true}],"ret":{"type":{"name":"GetCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_GetCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Returns information about particular card\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/api/v1/cards/{id}","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\"card\": {\"info\": {\n  \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n  \"name\": \"\",\n  \"primaryAttachment\":   {\n    \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n    \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n  },\n  \"source\": \"Contacts\",\n  \"createdAt\": \"2020-06-03T17:57:32Z\",\n  \"updatedAt\": \"2020-06-03T17:57:32Z\",\n  \"phaseId\": \"d6b621bd-2681-417f-b394-8b78586cc082\"\n}}} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"GetCardRequest","rpcResponseName":"GetCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Get Phase","methodName":"GetPhase","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" Phase ID to retrieve.\n","required":true}],"ret":{"type":{"name":"GetPhase","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_GetPhaseResponse"]},"doc":""},"locations":[],"docs":{"summary":" Returns information about particular phase\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/v1/phases/{id}","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/phases/76bef747-53d9-44fe-b2bb-aec5e0e2e5cb' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\"phase\": {\n  \"info\":   {\n    \"id\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n    \"name\": \"In Progress\"\n  },\n  \"cardsList\":   {\n    \"total\": 1,\n    \"cards\": [{\"info\":     {\n      \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n      \"name\": \"new name\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n        \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2020-06-03T17:57:32Z\",\n      \"updatedAt\": \"2020-06-05T18:06:24Z\",\n      \"phaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n    }}]\n  }\n}} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"GetPhaseRequest","rpcResponseName":"GetPhaseResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Get Phase (Additional Binding 1)","methodName":"GetPhase","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" Phase ID to retrieve.\n","required":true}],"ret":{"type":{"name":"GetPhase","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_GetPhaseResponse"]},"doc":""},"locations":[],"docs":{"summary":" Returns information about particular phase\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/api/v1/phases/{id}","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/phases/76bef747-53d9-44fe-b2bb-aec5e0e2e5cb' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\"phase\": {\n  \"info\":   {\n    \"id\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n    \"name\": \"In Progress\"\n  },\n  \"cardsList\":   {\n    \"total\": 1,\n    \"cards\": [{\"info\":     {\n      \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n      \"name\": \"new name\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n        \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2020-06-03T17:57:32Z\",\n      \"updatedAt\": \"2020-06-05T18:06:24Z\",\n      \"phaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n    }}]\n  }\n}} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"GetPhaseRequest","rpcResponseName":"GetPhaseResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Get Workflow","methodName":"GetWorkflow","serviceName":"WorkflowsService","tag":"Workflows","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" ID of the workflow to retrieve.\n","required":true},{"in":"QUERY","name":"cardsInitialPageSize","type":"integer","doc":" Number of Cards to return within each Phase, additional cards should be loaded using the CardsService\n","required":false}],"ret":{"type":{"name":"GetWorkflow","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_GetWorkflowResponse"]},"doc":""},"locations":[],"docs":{"summary":" Retrieves a workflow.\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/v1/workflows/{id}","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\"workflow\": {\n  \"info\":   {\n    \"id\": \"2975a9a7-3c36-443e-9b62-9f14ccaefff1\",\n    \"name\": \"Custom Flow\",\n    \"description\": \"\",\n    \"createdAt\": \"2020-04-19T08:12:31.619Z\"\n  },\n  \"winPhase\":   {\n    \"info\":     {\n      \"id\": \"170ff442-21c0-4907-a7cc-9d6999609532\",\n      \"name\": \"Done\"\n    },\n    \"cardsList\":     {\n      \"total\": 0,\n      \"cards\": []\n    }\n  },\n  \"phasesList\":   {\n    \"total\": 2,\n    \"phases\":     [\n            {\n        \"info\":         {\n          \"id\": \"d6b621bd-2681-417f-b394-8b78586cc082\",\n          \"name\": \"To Do\"\n        },\n        \"cardsList\":         {\n          \"total\": 0,\n          \"cards\": []\n        }\n      },\n            {\n        \"info\":         {\n          \"id\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n          \"name\": \"In Progress\"\n        },\n        \"cardsList\":         {\n          \"total\": 1,\n          \"cards\": [{\"info\":           {\n            \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n            \"name\": \"new name\",\n            \"primaryAttachment\":             {\n              \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n              \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n            },\n            \"source\": \"Contacts\",\n            \"createdAt\": \"2020-06-03T17:57:32Z\",\n            \"updatedAt\": \"2020-06-05T18:06:24Z\",\n            \"phaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n          }}]\n        }\n      }\n    ]\n  }\n}} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"GetWorkflowRequest","rpcResponseName":"GetWorkflowResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Get Workflow (Additional Binding 1)","methodName":"GetWorkflow","serviceName":"WorkflowsService","tag":"Workflows","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" ID of the workflow to retrieve.\n","required":true},{"in":"QUERY","name":"cardsInitialPageSize","type":"integer","doc":" Number of Cards to return within each Phase, additional cards should be loaded using the CardsService\n","required":false}],"ret":{"type":{"name":"GetWorkflow","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_GetWorkflowResponse"]},"doc":""},"locations":[],"docs":{"summary":" Retrieves a workflow.\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/api/v1/workflows/{id}","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\"workflow\": {\n  \"info\":   {\n    \"id\": \"2975a9a7-3c36-443e-9b62-9f14ccaefff1\",\n    \"name\": \"Custom Flow\",\n    \"description\": \"\",\n    \"createdAt\": \"2020-04-19T08:12:31.619Z\"\n  },\n  \"winPhase\":   {\n    \"info\":     {\n      \"id\": \"170ff442-21c0-4907-a7cc-9d6999609532\",\n      \"name\": \"Done\"\n    },\n    \"cardsList\":     {\n      \"total\": 0,\n      \"cards\": []\n    }\n  },\n  \"phasesList\":   {\n    \"total\": 2,\n    \"phases\":     [\n            {\n        \"info\":         {\n          \"id\": \"d6b621bd-2681-417f-b394-8b78586cc082\",\n          \"name\": \"To Do\"\n        },\n        \"cardsList\":         {\n          \"total\": 0,\n          \"cards\": []\n        }\n      },\n            {\n        \"info\":         {\n          \"id\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n          \"name\": \"In Progress\"\n        },\n        \"cardsList\":         {\n          \"total\": 1,\n          \"cards\": [{\"info\":           {\n            \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n            \"name\": \"new name\",\n            \"primaryAttachment\":             {\n              \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n              \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n            },\n            \"source\": \"Contacts\",\n            \"createdAt\": \"2020-06-03T17:57:32Z\",\n            \"updatedAt\": \"2020-06-05T18:06:24Z\",\n            \"phaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n          }}]\n        }\n      }\n    ]\n  }\n}} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"GetWorkflowRequest","rpcResponseName":"GetWorkflowResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"List Cards","methodName":"ListCards","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["workflowId"],"params":[{"in":"PATH","name":"workflowId","type":"string","doc":" ID of the workflow whose cards will be listed.\n","required":true},{"in":"QUERY","name":"fetchArchived","type":"boolean","doc":" an optional filter to ask for archived cards only\n","required":false},{"in":"QUERY","name":"offset","type":"integer","doc":" for paging - how many records to skip (default is 0)\n","required":false},{"in":"QUERY","name":"attachmentValue","type":"string","doc":" an optional filter to ask for cards with specific attachmentValue (e.g. only cards related to some contactId)\n","required":false},{"in":"QUERY","name":"phaseId","type":"string","doc":" an optional filter by a unique id of the phase in context\n","required":false},{"in":"QUERY","name":"limit","type":"integer","doc":" for paging - this is the page size (default is 0 - meaning no data in response. Can be used to get the total number of records)\n","required":false},{"in":"QUERY","name":"sort","type":{"name":"array","typeParams":["string"]},"doc":" sort - list of field:direction tupples. e.g. name:asc\n","required":false},{"in":"QUERY","name":"fields","type":{"name":"array","typeParams":["string"]},"doc":" a list of requested fields - for projection\n","required":false}],"ret":{"type":{"name":"ListCards","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_ListCardsResponse"]},"doc":""},"locations":[],"docs":{"summary":" Returns a list of cards according to:\n    * paging: offset, limit\n    * order: by some of the following fields: id, name, createdAt, updatedAt, position, phaseId\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/v1/workflows/{workflowId}/cards","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1/cards' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\n  \"cards\":   [\n    {\"info\":     {\n      \"id\": \"7dcd8d3a-6670-4c2b-9084-ed921a9c5f15\",\n      \"name\": \"Nice title\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"4c70bd40-8af0-49fb-a49f-cc483a0ff652\",\n        \"contactId\": \"a9f88b63-5866-4f44-ab2f-33b0d09cba7c\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2020-04-19T08:12:51Z\",\n      \"updatedAt\": \"2020-06-03T18:02:37Z\",\n      \"phaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n    }},\n    {\"info\":     {\n      \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n      \"name\": \"\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n        \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2020-06-03T17:57:32Z\",\n      \"updatedAt\": \"2020-06-03T17:57:32Z\",\n      \"phaseId\": \"d6b621bd-2681-417f-b394-8b78586cc082\"\n    }}\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 50,\n    \"total\": 2\n  }\n} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"ListCardsRequest","rpcResponseName":"ListCardsResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"List Cards (Additional Binding 1)","methodName":"ListCards","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["workflowId"],"params":[{"in":"PATH","name":"workflowId","type":"string","doc":" ID of the workflow whose cards will be listed.\n","required":true},{"in":"QUERY","name":"fetchArchived","type":"boolean","doc":" an optional filter to ask for archived cards only\n","required":false},{"in":"QUERY","name":"offset","type":"integer","doc":" for paging - how many records to skip (default is 0)\n","required":false},{"in":"QUERY","name":"attachmentValue","type":"string","doc":" an optional filter to ask for cards with specific attachmentValue (e.g. only cards related to some contactId)\n","required":false},{"in":"QUERY","name":"phaseId","type":"string","doc":" an optional filter by a unique id of the phase in context\n","required":false},{"in":"QUERY","name":"limit","type":"integer","doc":" for paging - this is the page size (default is 0 - meaning no data in response. Can be used to get the total number of records)\n","required":false},{"in":"QUERY","name":"sort","type":{"name":"array","typeParams":["string"]},"doc":" sort - list of field:direction tupples. e.g. name:asc\n","required":false},{"in":"QUERY","name":"fields","type":{"name":"array","typeParams":["string"]},"doc":" a list of requested fields - for projection\n","required":false}],"ret":{"type":{"name":"ListCards","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_ListCardsResponse"]},"doc":""},"locations":[],"docs":{"summary":" Returns a list of cards according to:\n    * paging: offset, limit\n    * order: by some of the following fields: id, name, createdAt, updatedAt, position, phaseId\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/api/v1/workflows/{workflowId}/cards","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1/cards' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\n  \"cards\":   [\n    {\"info\":     {\n      \"id\": \"7dcd8d3a-6670-4c2b-9084-ed921a9c5f15\",\n      \"name\": \"Nice title\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"4c70bd40-8af0-49fb-a49f-cc483a0ff652\",\n        \"contactId\": \"a9f88b63-5866-4f44-ab2f-33b0d09cba7c\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2020-04-19T08:12:51Z\",\n      \"updatedAt\": \"2020-06-03T18:02:37Z\",\n      \"phaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n    }},\n    {\"info\":     {\n      \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n      \"name\": \"\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n        \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2020-06-03T17:57:32Z\",\n      \"updatedAt\": \"2020-06-03T17:57:32Z\",\n      \"phaseId\": \"d6b621bd-2681-417f-b394-8b78586cc082\"\n    }}\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 50,\n    \"total\": 2\n  }\n} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"ListCardsRequest","rpcResponseName":"ListCardsResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"List Phases","methodName":"ListPhases","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["workflowId"],"params":[{"in":"PATH","name":"workflowId","type":"string","doc":" ID of the workflow whose phases you want to list.\n","required":true},{"in":"QUERY","name":"offset","type":"integer","doc":" Number of records to skip in the current sort order.\n","required":false},{"in":"QUERY","name":"limit","type":"integer","doc":" Number of items to return.\n If omitted, all results are returned.\n","required":false},{"in":"QUERY","name":"sort","type":{"name":"array","typeParams":["string"]},"doc":" List of fields to sort by.\n formatted as `\"field:direction\"`,\n where field is the field name\n and direction is `asc` or `desc`.\n\n Sorting is applied to the first item in the list,\n then the second, and so on.\n\n","required":false},{"in":"QUERY","name":"fields","type":{"name":"array","typeParams":["string"]},"doc":"","required":false}],"ret":{"type":{"name":"ListPhases","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_ListPhasesResponse"]},"doc":""},"locations":[],"docs":{"summary":" Returns a list of phases according to:\n    * paging: offset, limit\n    * order: by some of the following fields: id, name, position\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/v1/workflows/{workflowId}/phases","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1/phases' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\n  \"phases\":   [\n        {\n      \"info\":       {\n        \"id\": \"d6b621bd-2681-417f-b394-8b78586cc082\",\n        \"name\": \"To-Do\"\n      },\n      \"cardsList\":       {\n        \"total\": 0,\n        \"cards\": []\n      }\n    },\n        {\n      \"info\":       {\n        \"id\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n        \"name\": \"In Progress\"\n      },\n      \"cardsList\":       {\n        \"total\": 1,\n        \"cards\": [{\"info\":         {\n          \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n          \"name\": \"new name\",\n          \"primaryAttachment\":           {\n            \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n            \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n          },\n          \"source\": \"Contacts\",\n          \"createdAt\": \"2020-06-03T17:57:32Z\",\n          \"updatedAt\": \"2020-06-05T18:06:24Z\",\n          \"phaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n        }}]\n      }\n    }\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 50,\n    \"total\": 2\n  }\n} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"ListPhasesRequest","rpcResponseName":"ListPhasesResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"List Phases (Additional Binding 1)","methodName":"ListPhases","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["workflowId"],"params":[{"in":"PATH","name":"workflowId","type":"string","doc":" ID of the workflow whose phases you want to list.\n","required":true},{"in":"QUERY","name":"offset","type":"integer","doc":" Number of records to skip in the current sort order.\n","required":false},{"in":"QUERY","name":"limit","type":"integer","doc":" Number of items to return.\n If omitted, all results are returned.\n","required":false},{"in":"QUERY","name":"sort","type":{"name":"array","typeParams":["string"]},"doc":" List of fields to sort by.\n formatted as `\"field:direction\"`,\n where field is the field name\n and direction is `asc` or `desc`.\n\n Sorting is applied to the first item in the list,\n then the second, and so on.\n\n","required":false},{"in":"QUERY","name":"fields","type":{"name":"array","typeParams":["string"]},"doc":"","required":false}],"ret":{"type":{"name":"ListPhases","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_ListPhasesResponse"]},"doc":""},"locations":[],"docs":{"summary":" Returns a list of phases according to:\n    * paging: offset, limit\n    * order: by some of the following fields: id, name, position\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/api/v1/workflows/{workflowId}/phases","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1/phases' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\n  \"phases\":   [\n        {\n      \"info\":       {\n        \"id\": \"d6b621bd-2681-417f-b394-8b78586cc082\",\n        \"name\": \"To-Do\"\n      },\n      \"cardsList\":       {\n        \"total\": 0,\n        \"cards\": []\n      }\n    },\n        {\n      \"info\":       {\n        \"id\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n        \"name\": \"In Progress\"\n      },\n      \"cardsList\":       {\n        \"total\": 1,\n        \"cards\": [{\"info\":         {\n          \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n          \"name\": \"new name\",\n          \"primaryAttachment\":           {\n            \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n            \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n          },\n          \"source\": \"Contacts\",\n          \"createdAt\": \"2020-06-03T17:57:32Z\",\n          \"updatedAt\": \"2020-06-05T18:06:24Z\",\n          \"phaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n        }}]\n      }\n    }\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 50,\n    \"total\": 2\n  }\n} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"ListPhasesRequest","rpcResponseName":"ListPhasesResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"List Workflows","methodName":"ListWorkflows","serviceName":"WorkflowsService","tag":"Workflows","permissions":[],"events":[],"labels":[],"nameParams":[],"params":[{"in":"QUERY","name":"limit","type":"integer","doc":" Number of items to return.\n If omitted, all results are returned.\n","required":false},{"in":"QUERY","name":"offset","type":"integer","doc":" Number of records to skip in the current sort order.\n","required":false},{"in":"QUERY","name":"fields","type":{"name":"array","typeParams":["string"]},"doc":" List of projected fields to return.\n If omitted, all fields are returned.\n\n For a list of valid projected fields, see\n [Valid Workflow Projected Fields](#)\n","required":false},{"in":"QUERY","name":"sort","type":{"name":"array","typeParams":["string"]},"doc":" List of fields to sort by.\n formatted as `\"field:direction\"`,\n where field is the field name\n and direction is `asc` or `desc`.\n\n Sorting is applied to the first item in the list,\n then the second, and so on.\n","required":false}],"ret":{"type":{"name":"ListWorkflows","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_ListWorkflowsResponse"]},"doc":""},"locations":[],"docs":{"summary":" Returns a list of workflows according to:\n    * paging: offset, limit\n    * order: by some of the following fields: id, name, createdAt\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/v1/workflows","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/workflows' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\n  \"workflows\":   [\n        {\n      \"id\": \"2975a9a7-3c36-443e-9b62-9f14ccaefff1\",\n      \"name\": \"Custom Flow\",\n      \"description\": \"\",\n      \"createdAt\": \"2020-04-19T08:12:31.619Z\"\n    },\n        {\n      \"id\": \"f2358dbe-99f6-4f61-a544-46887a40c2b4\",\n      \"name\": \"New Workflow\",\n      \"createdAt\": \"2020-06-06T12:04:09.070Z\"\n    }\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 100,\n    \"total\": 2\n  }\n} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"ListWorkflowsRequest","rpcResponseName":"ListWorkflowsResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"List Workflows (Additional Binding 1)","methodName":"ListWorkflows","serviceName":"WorkflowsService","tag":"Workflows","permissions":[],"events":[],"labels":[],"nameParams":[],"params":[{"in":"QUERY","name":"limit","type":"integer","doc":" Number of items to return.\n If omitted, all results are returned.\n","required":false},{"in":"QUERY","name":"offset","type":"integer","doc":" Number of records to skip in the current sort order.\n","required":false},{"in":"QUERY","name":"fields","type":{"name":"array","typeParams":["string"]},"doc":" List of projected fields to return.\n If omitted, all fields are returned.\n\n For a list of valid projected fields, see\n [Valid Workflow Projected Fields](#)\n","required":false},{"in":"QUERY","name":"sort","type":{"name":"array","typeParams":["string"]},"doc":" List of fields to sort by.\n formatted as `\"field:direction\"`,\n where field is the field name\n and direction is `asc` or `desc`.\n\n Sorting is applied to the first item in the list,\n then the second, and so on.\n","required":false}],"ret":{"type":{"name":"ListWorkflows","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_ListWorkflowsResponse"]},"doc":""},"locations":[],"docs":{"summary":" Returns a list of workflows according to:\n    * paging: offset, limit\n    * order: by some of the following fields: id, name, createdAt\n \n","description":[],"request":"GET","url":"https://www.wixapis.com/workflows/api/v1/workflows","links":[],"examples":[{"title":"","body":["curl --location --request GET 'www.wixapis.com/workflows/api/v1/workflows' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>'"],"response":["{\n  \"workflows\":   [\n        {\n      \"id\": \"2975a9a7-3c36-443e-9b62-9f14ccaefff1\",\n      \"name\": \"Custom Flow\",\n      \"description\": \"\",\n      \"createdAt\": \"2020-04-19T08:12:31.619Z\"\n    },\n        {\n      \"id\": \"f2358dbe-99f6-4f61-a544-46887a40c2b4\",\n      \"name\": \"New Workflow\",\n      \"createdAt\": \"2020-06-06T12:04:09.070Z\"\n    }\n  ],\n  \"pagination\":   {\n    \"offset\": 0,\n    \"limit\": 100,\n    \"total\": 2\n  }\n} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"ListWorkflowsRequest","rpcResponseName":"ListWorkflowsResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Move Card","methodName":"MoveCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" a unique identifier of the card that should be moved\n","required":true},{"in":"BODY","name":"newPhaseId","type":"string","doc":" the id of the new phase to which the card will move\n","required":false},{"in":"BODY","name":"newPosition","type":"integer","doc":" the new position index to which the card will move (uppermost position index is 0)\n","required":false}],"ret":{"type":{"name":"MoveCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_MoveCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Moves a card to some other phase and / or a new position\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/v1/cards/{id}/move","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e/move' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"newPhaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n\t\"newPosition\": 0\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"MoveCardRequest","rpcResponseName":"MoveCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Move Card (Additional Binding 1)","methodName":"MoveCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" a unique identifier of the card that should be moved\n","required":true},{"in":"BODY","name":"newPhaseId","type":"string","doc":" the id of the new phase to which the card will move\n","required":false},{"in":"BODY","name":"newPosition","type":"integer","doc":" the new position index to which the card will move (uppermost position index is 0)\n","required":false}],"ret":{"type":{"name":"MoveCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_MoveCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Moves a card to some other phase and / or a new position\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/api/v1/cards/{id}/move","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e/move' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"newPhaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n\t\"newPosition\": 0\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"MoveCardRequest","rpcResponseName":"MoveCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Move Phase","methodName":"MovePhase","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["newPosition","workflowId","id"],"params":[{"in":"PATH","name":"workflowId","type":"string","doc":" ID of the workflow whose phase will be moved.\n","required":true},{"in":"PATH","name":"id","type":"string","doc":" ID of the phase to be moved.\n","required":true},{"in":"BODY","name":"newPosition","type":"integer","doc":" New phase position, where the first phase is `0`.\n","required":true}],"ret":{"type":{"name":"MovePhase","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_MovePhaseResponse"]},"doc":""},"locations":[],"docs":{"summary":" Moves a phase to some other position\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/v1/workflows/{workflowId}/phases/{id}/move","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1/phases/d6b621bd-2681-417f-b394-8b78586cc082/move' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"newPosition\": 1\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"MovePhaseRequest","rpcResponseName":"MovePhaseResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Move Phase (Additional Binding 1)","methodName":"MovePhase","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["newPosition","workflowId","id"],"params":[{"in":"PATH","name":"workflowId","type":"string","doc":" ID of the workflow whose phase will be moved.\n","required":true},{"in":"PATH","name":"id","type":"string","doc":" ID of the phase to be moved.\n","required":true},{"in":"BODY","name":"newPosition","type":"integer","doc":" New phase position, where the first phase is `0`.\n","required":true}],"ret":{"type":{"name":"MovePhase","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_MovePhaseResponse"]},"doc":""},"locations":[],"docs":{"summary":" Moves a phase to some other position\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/api/v1/workflows/{workflowId}/phases/{id}/move","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/workflows/2975a9a7-3c36-443e-9b62-9f14ccaefff1/phases/d6b621bd-2681-417f-b394-8b78586cc082/move' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"newPosition\": 1\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"MovePhaseRequest","rpcResponseName":"MovePhaseResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Restore Card","methodName":"RestoreCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["newPhaseId","id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" a unique identifier of the card that should be restored\n","required":true},{"in":"BODY","name":"newPhaseId","type":"string","doc":" the id of the new phase to which the card will be restored\n","required":true},{"in":"BODY","name":"newPosition","type":"integer","doc":" the new position to which the card will be restored\n","required":false}],"ret":{"type":{"name":"RestoreCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_RestoreCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Moves a card to some other phase and / or a new position\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/v1/cards/{id}/restore","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e/restore' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"newPhaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n\t\"newPosition\": 0\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"RestoreCardRequest","rpcResponseName":"RestoreCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Restore Card (Additional Binding 1)","methodName":"RestoreCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["newPhaseId","id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" a unique identifier of the card that should be restored\n","required":true},{"in":"BODY","name":"newPhaseId","type":"string","doc":" the id of the new phase to which the card will be restored\n","required":true},{"in":"BODY","name":"newPosition","type":"integer","doc":" the new position to which the card will be restored\n","required":false}],"ret":{"type":{"name":"RestoreCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_RestoreCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Moves a card to some other phase and / or a new position\n \n","description":[],"request":"POST","url":"https://www.wixapis.com/workflows/api/v1/cards/{id}/restore","links":[],"examples":[{"title":"","body":["curl --location --request POST 'www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e/restore' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"newPhaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n\t\"newPosition\": 0\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"RestoreCardRequest","rpcResponseName":"RestoreCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Update Card","methodName":"UpdateCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" the id of the card that should be updated\n","required":true},{"in":"BODY","name":"cardInfo","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo","doc":" the new details to update\n","required":false}],"ret":{"type":{"name":"UpdateCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdateCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Update the properties of an existing card\n \n","description":[],"request":"PATCH","url":"https://www.wixapis.com/workflows/v1/cards/{id}","links":[],"examples":[{"title":"","body":["curl --location --request PATCH 'www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"cardInfo\": {\n\t\t\"name\": \"new name\"\n\t}\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"UpdateCardRequest","rpcResponseName":"UpdateCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Update Card (Additional Binding 1)","methodName":"UpdateCard","serviceName":"CardsService","tag":"Cards","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" the id of the card that should be updated\n","required":true},{"in":"BODY","name":"cardInfo","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo","doc":" the new details to update\n","required":false}],"ret":{"type":{"name":"UpdateCard","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdateCardResponse"]},"doc":""},"locations":[],"docs":{"summary":" Update the properties of an existing card\n \n","description":[],"request":"PATCH","url":"https://www.wixapis.com/workflows/api/v1/cards/{id}","links":[],"examples":[{"title":"","body":["curl --location --request PATCH 'www.wixapis.com/workflows/api/v1/cards/1f5e06f7-0957-4007-affc-85978dfa5d4e' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"cardInfo\": {\n\t\t\"name\": \"new name\"\n\t}\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"UpdateCardRequest","rpcResponseName":"UpdateCardResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Update Phase","methodName":"UpdatePhase","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" ID of the phase to update.\n","required":true},{"in":"BODY","name":"phase","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo","doc":" Phase details to update.\n","required":false}],"ret":{"type":{"name":"UpdatePhase","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdatePhaseResponse"]},"doc":""},"locations":[],"docs":{"summary":" Update the properties of an existing phase\n \n","description":[],"request":"PATCH","url":"https://www.wixapis.com/workflows/v1/phases/{id}","links":[],"examples":[{"title":"","body":["curl --location --request PATCH 'www.wixapis.com/workflows/api/v1/phases/d6b621bd-2681-417f-b394-8b78586cc082' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"phase\": {\n\t\t\"name\": \"New phase name\"\n\t}\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"UpdatePhaseRequest","rpcResponseName":"UpdatePhaseResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Update Phase (Additional Binding 1)","methodName":"UpdatePhase","serviceName":"PhasesService","tag":"Phases","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" ID of the phase to update.\n","required":true},{"in":"BODY","name":"phase","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo","doc":" Phase details to update.\n","required":false}],"ret":{"type":{"name":"UpdatePhase","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdatePhaseResponse"]},"doc":""},"locations":[],"docs":{"summary":" Update the properties of an existing phase\n \n","description":[],"request":"PATCH","url":"https://www.wixapis.com/workflows/api/v1/phases/{id}","links":[],"examples":[{"title":"","body":["curl --location --request PATCH 'www.wixapis.com/workflows/api/v1/phases/d6b621bd-2681-417f-b394-8b78586cc082' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"phase\": {\n\t\t\"name\": \"New phase name\"\n\t}\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"UpdatePhaseRequest","rpcResponseName":"UpdatePhaseResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Update Workflow","methodName":"UpdateWorkflow","serviceName":"WorkflowsService","tag":"Workflows","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" ID of the workflow to update.\n","required":true},{"in":"BODY","name":"workflow","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo","doc":" Workflow info.\n","required":false}],"ret":{"type":{"name":"UpdateWorkflow","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdateWorkflowResponse"]},"doc":""},"locations":[],"docs":{"summary":" Update the properties of an existing workflow\n \n","description":[],"request":"PATCH","url":"https://www.wixapis.com/workflows/v1/workflows/{id}","links":[],"examples":[{"title":"","body":["curl --location --request PATCH 'www.wixapis.com/workflows/api/v1/workflows/f2358dbe-99f6-4f61-a544-46887a40c2b4' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"workflow\": {\n\t\t\"name\": \"Cool Workflow\"\n\t}\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"UpdateWorkflowRequest","rpcResponseName":"UpdateWorkflowResponse"},"customLabels":[{"id":"maturity-beta"}]},{"name":"Update Workflow (Additional Binding 1)","methodName":"UpdateWorkflow","serviceName":"WorkflowsService","tag":"Workflows","permissions":[],"events":[],"labels":[],"nameParams":[],"requiredFields":["id"],"params":[{"in":"PATH","name":"id","type":"string","doc":" ID of the workflow to update.\n","required":true},{"in":"BODY","name":"workflow","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo","doc":" Workflow info.\n","required":false}],"ret":{"type":{"name":"UpdateWorkflow","statusCode":"200","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_UpdateWorkflowResponse"]},"doc":""},"locations":[],"docs":{"summary":" Update the properties of an existing workflow\n \n","description":[],"request":"PATCH","url":"https://www.wixapis.com/workflows/api/v1/workflows/{id}","links":[],"examples":[{"title":"","body":["curl --location --request PATCH 'www.wixapis.com/workflows/api/v1/workflows/f2358dbe-99f6-4f61-a544-46887a40c2b4' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: <AUTH>' \\\n--header 'Content-Type: text/plain' \\\n--data-raw '{\n\t\"workflow\": {\n\t\t\"name\": \"Cool Workflow\"\n\t}\n}'\n\n"],"response":["{} "],"type":"curl","extra":{}}],"extra":{}},"extra":{"hasRest":true,"rpcRequestName":"UpdateWorkflowRequest","rpcResponseName":"UpdateWorkflowResponse"},"customLabels":[{"id":"maturity-beta"}]}],"events":[{"type":"_com_wixpress_workflow_api_v1_CardDeletedDomainEvent","name":"Card Deleted Webhook","docs":{"summary":""},"topic":"domain_events_wix.workflows.v1.card","tag":"Cards","permissions":[],"customLabels":[{"id":"maturity-beta"}],"eventType":"wix.workflows.v1.card_deleted","extra":{"isDomainEvent":true}},{"type":"_com_wixpress_workflow_api_v1_CardUpdatedDomainEvent","name":"Card Updated Webhook","docs":{"summary":""},"topic":"domain_events_wix.workflows.v1.card","tag":"Cards","permissions":[],"customLabels":[{"id":"maturity-beta"}],"eventType":"wix.workflows.v1.card_updated","extra":{"isDomainEvent":true}},{"type":"_com_wixpress_workflow_api_v1_CardCreatedDomainEvent","name":"Card Created Webhook","docs":{"summary":""},"topic":"domain_events_wix.workflows.v1.card","tag":"Cards","permissions":[],"customLabels":[{"id":"maturity-beta"}],"eventType":"wix.workflows.v1.card_created","extra":{"isDomainEvent":true}}],"callbacks":[],"messages":[{"name":"_com_wixpress_workflow_api_v1_CardDeletedDomainEvent","displayName":"Card Deleted Domain Event Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":"Unique event ID."},{"name":"entityFqdn","type":"string","doc":"Expected `wix.workflows.v1.card`.\nFully Qualified Domain Name."},{"name":"slug","type":"string","doc":"Expected `deleted`.\nEvent name."},{"name":"deletedEvent","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardEntityDeletedEvent","doc":"Event Info"},{"name":"entityId","type":"string","doc":"Card ID associated with this event."},{"name":"eventTime","type":"string","doc":"Event timestamp."},{"name":"triggeredByAnonymizeRequest","type":"boolean","doc":"Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CardEntityDeletedEvent","displayName":"Card Entity Deleted Event Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CardUpdatedDomainEvent","displayName":"Card Updated Domain Event Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":"Unique event ID."},{"name":"entityFqdn","type":"string","doc":"Expected `wix.workflows.v1.card`.\nFully Qualified Domain Name."},{"name":"slug","type":"string","doc":"Expected `updated`.\nEvent name."},{"name":"updatedEvent","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardEntityUpdatedEvent","doc":"Event Info"},{"name":"entityId","type":"string","doc":"Card ID associated with this event."},{"name":"eventTime","type":"string","doc":"Event timestamp."},{"name":"triggeredByAnonymizeRequest","type":"boolean","doc":"Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CardEntityUpdatedEvent","displayName":"Card Entity Updated Event Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"currentEntity","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_Card","doc":"Event body"},{"name":"previousEntity","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_Card","doc":"Previous event body, (when relevant)."}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CardCreatedDomainEvent","displayName":"Card Created Domain Event Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":"Unique event ID."},{"name":"entityFqdn","type":"string","doc":"Expected `wix.workflows.v1.card`.\nFully Qualified Domain Name."},{"name":"slug","type":"string","doc":"Expected `created`.\nEvent name."},{"name":"createdEvent","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardEntityCreatedEvent","doc":"Event Info"},{"name":"entityId","type":"string","doc":"Card ID associated with this event."},{"name":"eventTime","type":"string","doc":"Event timestamp."},{"name":"triggeredByAnonymizeRequest","type":"boolean","doc":"Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CardEntityCreatedEvent","displayName":"Card Entity Created Event Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"entity","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_Card","doc":"Event body"}],"enum":null,"extra":{},"labels":[]},{"name":"_google_protobuf_Value","displayName":"Value Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"kind","type":"All APIs.Workflows._google_protobuf_Value_kind","doc":" The kind of value.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_google_protobuf_Value_kind","displayName":"kind Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"nullValue","type":"All APIs.Workflows._google_protobuf_NullValue","doc":" Represents a null value.\n"},{"name":"numberValue","type":"number","doc":" Represents a double value.\n"},{"name":"stringValue","type":"string","doc":" Represents a string value.\n"},{"name":"boolValue","type":"boolean","doc":" Represents a boolean value.\n"},{"name":"structValue","type":"struct","doc":" Represents a structured value.\n"},{"name":"listValue","type":{"name":"array","typeParams":["All APIs.Workflows._google_protobuf_Value"]},"doc":" Represents a repeated `Value`.\n"}],"enum":null,"extra":{},"labels":[],"oneOf":true},{"name":"_com_wixpress_workflow_api_v1_Attachment","displayName":"Attachment Object","locations":[],"docs":{"summary":" a specific value-type that holds a list of values form the the supported types. e.g.:  {\"values\": [{\"strValue\": \"Blue\"}, {\"numValue\": 5.6}] }\n","links":[],"examples":[]},"members":[{"name":"attachmentId","type":"string","doc":" the unique id of the attachment\n","readOnly":true},{"name":"contactId","type":"string","doc":" an id of a contact from the site\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CardInfo","displayName":"Card Info Object","locations":[],"docs":{"summary":" entity representing a card-info\n","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" Card ID.\n","readOnly":true},{"name":"name","type":"string","doc":" Human-readable name shown in the Wix UI.\n"},{"name":"description","type":"string","doc":" Card description.\n"},{"name":"primaryAttachment","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_Attachment","doc":" Details about the contact linked to the card.\n"},{"name":"dueDate","type":"string","doc":" Due date.\n"},{"name":"source","type":"string","doc":" the source that triggered the card creation\n"},{"name":"phaseId","type":"string","doc":" unique identifier of the phase that holds the card\n","readOnly":true},{"name":"createdDate","type":"string","doc":" the creation date of the card\n","readOnly":true},{"name":"updatedDate","type":"string","doc":" the last update date of the card\n","readOnly":true}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_Card","displayName":"Card Object","locations":[],"docs":{"summary":" entity representing a card\n","links":[],"examples":[{"title":"","body":["{\"card\": {\"info\": {\n  \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n  \"name\": \"\",\n  \"primaryAttachment\":   {\n    \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n    \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n  },\n  \"source\": \"Contacts\",\n  \"createdAt\": \"2020-06-03T17:57:32Z\",\n  \"updatedAt\": \"2020-06-03T17:57:32Z\",\n  \"phaseId\": \"d6b621bd-2681-417f-b394-8b78586cc082\"\n}}} "],"type":"json","extra":{}}]},"members":[{"name":"info","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo","doc":" Card details.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_PaginationResponse","displayName":"Pagination Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"offset","type":"integer","doc":" Number of items that were skipped in the current sort order.\n"},{"name":"total","type":"integer","doc":" Total count of items that matched the filter.\n"},{"name":"count","type":"integer","doc":" page size\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_wix_common_Paging","displayName":"Paging Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"limit","type":"integer","doc":" The number of items to load\n"},{"name":"offset","type":"integer","doc":" number of items to skip in the current sort order\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_wix_common_Sorting","displayName":"Sorting Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"fieldName","type":"string","doc":"Name of the field to sort by\n"},{"name":"order","type":"All APIs.Workflows._wix_common_SortOrder","doc":"Sort order (ASC/DESC). Defaults to ASC\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_wix_common_Query","displayName":"Query Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"filter","type":"All APIs.Workflows._google_protobuf_Value","doc":"A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)\n"},{"name":"sort","type":{"name":"array","typeParams":["All APIs.Workflows._wix_common_Sorting"]},"doc":"Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]\n"},{"name":"paging","type":"All APIs.Workflows._wix_common_Paging","doc":"Limit number of results\n"},{"name":"fields","type":{"name":"array","typeParams":["string"]},"doc":"Projection on the result object - list of specific field names to return. If fieldsets are also specified, return the union of fieldsets and fields\n"},{"name":"fieldsets","type":{"name":"array","typeParams":["string"]},"doc":"Projection on the result object - list of named projections. E.g. \"basic\" will return id and name fields. Specifying multiple fieldsets will return the union of fields from all. Specifying fieldsets and fields will also return the union of fields.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_ListCardsRequest","displayName":"List Cards Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflowId","type":"string","doc":" ID of the workflow whose cards will be listed.\n"},{"name":"phaseId","type":"string","doc":" an optional filter by a unique id of the phase in context\n"},{"name":"limit","type":"integer","doc":" for paging - this is the page size (default is 0 - meaning no data in response. Can be used to get the total number of records)\n"},{"name":"offset","type":"integer","doc":" for paging - how many records to skip (default is 0)\n"},{"name":"fields","type":{"name":"array","typeParams":["string"]},"doc":" a list of requested fields - for projection\n"},{"name":"attachmentValue","type":"string","doc":" an optional filter to ask for cards with specific attachmentValue (e.g. only cards related to some contactId)\n"},{"name":"fetchArchived","type":"boolean","doc":" an optional filter to ask for archived cards only\n"},{"name":"sort","type":{"name":"array","typeParams":["string"]},"doc":" sort - list of field:direction tupples. e.g. name:asc\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_ListCardsResponse","displayName":"List Cards Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"cards","type":{"name":"array","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_Card"]},"doc":" a list of cards\n"},{"name":"pagination","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse","doc":" pagination response - specifies which offset / limit are applied and how many rows are available\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_GetCardRequest","displayName":"Get Card Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" a unique identifier of the requested card\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_GetCardResponse","displayName":"Get Card Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"card","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_Card","doc":" the requested card\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CreateCardRequest","displayName":"Create Card Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflowId","type":"string","doc":" a unique id of the workflow in context\n"},{"name":"phaseId","type":"string","doc":" a unique id of the phase in context\n"},{"name":"card","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo","doc":" the card to create\n"},{"name":"position","type":"integer","doc":" the initial position index in which the card will be created (uppermost position index is 0)\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CreateCardResponse","displayName":"Create Card Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" the id of the newly created card\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_UpdateCardRequest","displayName":"Update Card Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" the id of the card that should be updated\n"},{"name":"cardInfo","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardInfo","doc":" the new details to update\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_UpdateCardResponse","displayName":"Update Card Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_DeleteCardRequest","displayName":"Delete Card Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" a unique identifier of the card that should be deleted\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_DeleteCardResponse","displayName":"Delete Card Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_MoveCardRequest","displayName":"Move Card Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" a unique identifier of the card that should be moved\n"},{"name":"newPhaseId","type":"string","doc":" the id of the new phase to which the card will move\n"},{"name":"newPosition","type":"integer","doc":" the new position index to which the card will move (uppermost position index is 0)\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_MoveCardResponse","displayName":"Move Card Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_RestoreCardRequest","displayName":"Restore Card Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" a unique identifier of the card that should be restored\n"},{"name":"newPhaseId","type":"string","doc":" the id of the new phase to which the card will be restored\n"},{"name":"newPosition","type":"integer","doc":" the new position to which the card will be restored\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_RestoreCardResponse","displayName":"Restore Card Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_ArchiveCardRequest","displayName":"Archive Card Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" a unique identifier of the card that should be archived\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_ArchiveCardResponse","displayName":"Archive Card Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_QueryCardsRequest","displayName":"Query Cards Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"query","type":"All APIs.Workflows._wix_common_Query","doc":" a complex query object\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_QueryCardsResponse","displayName":"Query Cards Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"cards","type":{"name":"array","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_Card"]},"doc":" a list of cards\n"},{"name":"pagination","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse","doc":" pagination response - specifies which offset / limit are applied and how many rows are available\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_PhaseInfo","displayName":"Phase Info Object","locations":[],"docs":{"summary":" entity representing a phase-info\n","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" Phase ID.\n","readOnly":true},{"name":"name","type":"string","doc":" Human-readable name shown in the Wix UI.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_Phase","displayName":"Phase Object","locations":[],"docs":{"summary":" entity representing a phase\n","links":[],"examples":[{"title":"","body":["{\"phase\": {\n  \"info\":   {\n    \"id\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n    \"name\": \"In Progress\"\n  },\n  \"cardsList\":   {\n    \"total\": 1,\n    \"cards\": [{\"info\":     {\n      \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n      \"name\": \"new name\",\n      \"primaryAttachment\":       {\n        \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n        \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n      },\n      \"source\": \"Contacts\",\n      \"createdAt\": \"2020-06-03T17:57:32Z\",\n      \"updatedAt\": \"2020-06-05T18:06:24Z\",\n      \"phaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n    }}]\n  }\n}} "],"type":"json","extra":{}}]},"members":[{"name":"info","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo","doc":" Phase details.\n"},{"name":"cardsList","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_CardsList","doc":" Cards contained in the phase.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CardsList","displayName":"Cards List Object","locations":[],"docs":{"summary":" a list of cards (a page) along with the total number\n","links":[],"examples":[]},"members":[{"name":"total","type":"integer","doc":" the total count of cards\n"},{"name":"cards","type":{"name":"array","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_Card"]},"doc":" a list of cards\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_WorkflowInfo","displayName":"Workflow Info Object","locations":[],"docs":{"summary":" entity representing a workflow-info\n","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" Workflow ID.\n","readOnly":true},{"name":"name","type":"string","doc":" Human-readable name shown in the Wix UI.\n"},{"name":"description","type":"string","doc":" Workflow description.\n"},{"name":"createdDate","type":"string","doc":" Date the workflow was created.\n","readOnly":true}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_Workflow","displayName":"Workflow Object","locations":[],"docs":{"summary":" entity representing a workflow\n","links":[],"examples":[{"title":"","body":["{\"workflow\": {\n  \"info\":   {\n    \"id\": \"2975a9a7-3c36-443e-9b62-9f14ccaefff1\",\n    \"name\": \"Custom Flow\",\n    \"description\": \"\",\n    \"createdAt\": \"2020-04-19T08:12:31.619Z\"\n  },\n  \"winPhase\":   {\n    \"info\":     {\n      \"id\": \"170ff442-21c0-4907-a7cc-9d6999609532\",\n      \"name\": \"Done\"\n    },\n    \"cardsList\":     {\n      \"total\": 0,\n      \"cards\": []\n    }\n  },\n  \"phasesList\":   {\n    \"total\": 2,\n    \"phases\":     [\n            {\n        \"info\":         {\n          \"id\": \"d6b621bd-2681-417f-b394-8b78586cc082\",\n          \"name\": \"To Do\"\n        },\n        \"cardsList\":         {\n          \"total\": 0,\n          \"cards\": []\n        }\n      },\n            {\n        \"info\":         {\n          \"id\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\",\n          \"name\": \"In Progress\"\n        },\n        \"cardsList\":         {\n          \"total\": 1,\n          \"cards\": [{\"info\":           {\n            \"id\": \"1f5e06f7-0957-4007-affc-85978dfa5d4e\",\n            \"name\": \"new name\",\n            \"primaryAttachment\":             {\n              \"attachmentId\": \"0ec91342-4e09-4acc-8ec4-c37bf80c7462\",\n              \"contactId\": \"53a098dc-1ce7-45a1-b041-17c2f6209cf7\"\n            },\n            \"source\": \"Contacts\",\n            \"createdAt\": \"2020-06-03T17:57:32Z\",\n            \"updatedAt\": \"2020-06-05T18:06:24Z\",\n            \"phaseId\": \"76bef747-53d9-44fe-b2bb-aec5e0e2e5cb\"\n          }}]\n        }\n      }\n    ]\n  }\n}} "],"type":"json","extra":{}}]},"members":[{"name":"info","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo","doc":" Workflow details.\n"},{"name":"winPhase","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_Phase","doc":" Last phase of the workflow, known as the _win phase_.\n"},{"name":"phasesList","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PhasesList","doc":" Phases that make up the workflow.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_PhasesList","displayName":"Phases List Object","locations":[],"docs":{"summary":" a list of phases (a page) along with the total number\n","links":[],"examples":[]},"members":[{"name":"total","type":"integer","doc":" the total count of phases\n"},{"name":"phases","type":{"name":"array","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_Phase"]},"doc":" a list of phases\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_ListPhasesRequest","displayName":"List Phases Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflowId","type":"string","doc":" ID of the workflow whose phases you want to list.\n"},{"name":"limit","type":"integer","doc":" Number of items to return.\n If omitted, all results are returned.\n"},{"name":"offset","type":"integer","doc":" Number of records to skip in the current sort order.\n"},{"name":"fields","type":{"name":"array","typeParams":["string"]},"doc":""},{"name":"sort","type":{"name":"array","typeParams":["string"]},"doc":" List of fields to sort by.\n formatted as `\"field:direction\"`,\n where field is the field name\n and direction is `asc` or `desc`.\n\n Sorting is applied to the first item in the list,\n then the second, and so on.\n\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_ListPhasesResponse","displayName":"List Phases Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"phases","type":{"name":"array","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_Phase"]},"doc":" List of phases.\n"},{"name":"pagination","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse","doc":" Metadata for the page of results.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_GetPhaseRequest","displayName":"Get Phase Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" Phase ID to retrieve.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_GetPhaseResponse","displayName":"Get Phase Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"phase","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_Phase","doc":" Requested phase.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CreatePhaseRequest","displayName":"Create Phase Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflowId","type":"string","doc":" ID of the workflow the phase will be created in.\n"},{"name":"phase","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo","doc":" Phase details.\n"},{"name":"position","type":"integer","doc":" Phase position, where the first phase is `0`.\n\n Defaults to the last phase before the win phase.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CreatePhaseResponse","displayName":"Create Phase Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" ID of the newly created phase.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_UpdatePhaseRequest","displayName":"Update Phase Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" ID of the phase to update.\n"},{"name":"phase","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PhaseInfo","doc":" Phase details to update.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_UpdatePhaseResponse","displayName":"Update Phase Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_DeletePhaseRequest","displayName":"Delete Phase Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" ID of the phase to delete.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_DeletePhaseResponse","displayName":"Delete Phase Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_MovePhaseRequest","displayName":"Move Phase Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflowId","type":"string","doc":" ID of the workflow whose phase will be moved.\n"},{"name":"id","type":"string","doc":" ID of the phase to be moved.\n"},{"name":"newPosition","type":"integer","doc":" New phase position, where the first phase is `0`.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_MovePhaseResponse","displayName":"Move Phase Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_QueryPhasesRequest","displayName":"Query Phases Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"query","type":"All APIs.Workflows._wix_common_Query","doc":" a complex query object\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_QueryPhasesResponse","displayName":"Query Phases Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"phases","type":{"name":"array","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_Phase"]},"doc":" List of phases that matched the query criteria.\n"},{"name":"pagination","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse","doc":" Metadata for the page of results.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_ListTemplatesRequest","displayName":"List Templates Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"limit","type":"integer","doc":" Number of items to return.\n If omitted, all results are returned.\n"},{"name":"offset","type":"integer","doc":" Number of items to skip in the current sort order.\n"},{"name":"fields","type":{"name":"array","typeParams":["string"]},"doc":" List of projected fields to return.\n If omitted, all fields are returned.\n\n For a list of valid projected fields, see\n [Valid Workflow Projected Fields](#)\n"},{"name":"sort","type":{"name":"array","typeParams":["string"]},"doc":" List of fields to sort by.\n formatted as `\"field:direction\"`,\n where field is the field name\n and direction is `asc` or `desc`.\n\n Sorting is applied to the first item in the list,\n then the second, and so on.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_ListTemplatesResponse","displayName":"List Templates Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflows","type":{"name":"array","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo"]},"doc":" List of templates.\n"},{"name":"pagination","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse","doc":" Metadata for the page of results.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_GetTemplateRequest","displayName":"Get Template Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" Template ID.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_GetTemplateResponse","displayName":"Get Template Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflow","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_Workflow","doc":" The requested template.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CloneTemplateRequest","displayName":"Clone Template Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" a unique identifier of the template to clone\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CloneTemplateResponse","displayName":"Clone Template Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" the id of the newly created workflow\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_ListWorkflowsRequest","displayName":"List Workflows Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"limit","type":"integer","doc":" Number of items to return.\n If omitted, all results are returned.\n"},{"name":"offset","type":"integer","doc":" Number of records to skip in the current sort order.\n"},{"name":"fields","type":{"name":"array","typeParams":["string"]},"doc":" List of projected fields to return.\n If omitted, all fields are returned.\n\n For a list of valid projected fields, see\n [Valid Workflow Projected Fields](#)\n"},{"name":"sort","type":{"name":"array","typeParams":["string"]},"doc":" List of fields to sort by.\n formatted as `\"field:direction\"`,\n where field is the field name\n and direction is `asc` or `desc`.\n\n Sorting is applied to the first item in the list,\n then the second, and so on.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_ListWorkflowsResponse","displayName":"List Workflows Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflows","type":{"name":"array","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo"]},"doc":" List of workflows.\n"},{"name":"pagination","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse","doc":" Metadata for the page of results.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_GetWorkflowRequest","displayName":"Get Workflow Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" ID of the workflow to retrieve.\n"},{"name":"cardsInitialPageSize","type":"integer","doc":" Number of Cards to return within each Phase, additional cards should be loaded using the CardsService\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_GetWorkflowResponse","displayName":"Get Workflow Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflow","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_Workflow","doc":" The requested workflow.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CreateWorkflowRequest","displayName":"Create Workflow Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflow","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo","doc":" Workflow info.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_CreateWorkflowResponse","displayName":"Create Workflow Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" ID of the new workflow.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_UpdateWorkflowRequest","displayName":"Update Workflow Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" ID of the workflow to update.\n"},{"name":"workflow","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_WorkflowInfo","doc":" Workflow info.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_UpdateWorkflowResponse","displayName":"Update Workflow Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_DeleteWorkflowRequest","displayName":"Delete Workflow Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"id","type":"string","doc":" ID of the workflow to delete.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_DeleteWorkflowResponse","displayName":"Delete Workflow Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_SetupWorkflowRequest","displayName":"Setup Workflow Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_SetupWorkflowResponse","displayName":"Setup Workflow Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_QueryWorkflowsRequest","displayName":"Query Workflows Request Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"query","type":"All APIs.Workflows._wix_common_Query","doc":" Query options.\n\n > TODO link to filter article for this set of apis\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_QueryWorkflowsResponse","displayName":"Query Workflows Response Object","locations":[],"docs":{"summary":"","links":[],"examples":[]},"members":[{"name":"workflows","type":{"name":"array","typeParams":["All APIs.Workflows._com_wixpress_workflow_api_v1_Workflow"]},"doc":" List of workflows that matched the query.\n"},{"name":"pagination","type":"All APIs.Workflows._com_wixpress_workflow_api_v1_PaginationResponse","doc":" Metadata for the paginated results.\n"}],"enum":null,"extra":{},"labels":[]},{"name":"_google_protobuf_NullValue","displayName":"Null Value Object","locations":[],"docs":{"summary":" `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n \n Possible values are: <li><code> NULL_VALUE -  Null value.\n <\/code><\/li>","links":[],"examples":[]},"members":[],"enum":["NULL_VALUE"],"extra":{},"labels":[]},{"name":"_com_wixpress_workflow_api_v1_AttachmentType","displayName":"Attachment Type Object","locations":[],"docs":{"summary":" describes the supported types of attachments (currently only supports Contact which is the default type)\n \n Possible values are: <li><code> ContactType <\/code><\/li>","links":[],"examples":[]},"members":[],"enum":["ContactType"],"extra":{},"labels":[]},{"name":"_wix_common_SortOrder","displayName":"Sort Order Object","locations":[],"docs":{"summary":" \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>","links":[],"examples":[]},"members":[],"enum":["ASC","DESC"],"extra":{},"labels":[]}],"extra":{"artifactId":"com.wixpress.workflow.workflow-server-api"}}